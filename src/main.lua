---
--- Generated by Luanalysis
--- Created by jiebin.
--- DateTime: 2021/12/31 11:06
---

local rate_limit_key = "test_rate_limit"
local burst = 2 -- 一秒2个
local rate = 2
local period = 1
local cost = 1

local emission_interval = period / rate -- 0.5
local increment = emission_interval * cost -- 0.5
local burst_offset = emission_interval * burst -- 0.5 * 2 = 1

--local jan_1_2017 = 1483228800
local now = 1640923505000

local tat = 0 -- local tat = redis.call("GET", rate_limit_key) rate_limit_key的值是:157695664.16620299

if not tat then
    tat = now
else
    tat = tonumber(tat)
end

tat = math.max(tat, now) -- qps中最新的一个

local new_tat = tat + increment -- 放了一个,计算下一个允许的时间戳 +0.5
local allow_at = new_tat - burst_offset -- -1 = -0.5

local diff = now - allow_at -- +0.5
local remaining = diff / emission_interval -- 0.5 / 0.5 = 1

if remaining < 0 then
    local reset_after = tat - now
    local retry_after = diff * -1
    return {
        0, -- allowed
        0, -- remaining
        tostring(retry_after),
        tostring(reset_after),
    }
end

local reset_after = new_tat - now
if reset_after > 0 then
    --redis.call("SET", rate_limit_key, new_tat, "EX", math.ceil(reset_after))
end
local retry_after = -1
return { cost, remaining, tostring(retry_after), tostring(reset_after) }